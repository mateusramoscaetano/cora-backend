// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Doctor {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  role       String     @default("doctor")
  email      String     @unique
  phone      String
  password   String
  pet_owners PetOwner[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt()
}

model Clinic {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  role     String @default("clinic")
  email    String @unique
  password String
  address  String
  phone    String

  report Report[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt()
  PetOwner  PetOwner[]
}

model Pet {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  age       String
  race      String
  specie    String
  reports   Report[]
  weight    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  pet_owner    PetOwner @relation(fields: [pet_owner_id], references: [id])
  pet_owner_id String   @db.ObjectId
}

model Report {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  path      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  pet      Pet     @relation(fields: [pet_id], references: [id])
  pet_id   String  @db.ObjectId
  Clinic   Clinic? @relation(fields: [clinicId], references: [id])
  clinicId String? @db.ObjectId
}

model PetOwner {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  pets     Pet[]
  email    String @unique
  password String
  phone    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  doctor   Doctor? @relation(fields: [doctorId], references: [id])
  doctorId String? @db.ObjectId
  clinic   Clinic? @relation(fields: [clinicId], references: [id])
  clinicId String? @db.ObjectId
}
